@using WEA.Core.Entities
@(Html.DevExtreme().DataGrid<Menu>().ID("dtGrid").ElementAttr("class","dtGrid-custom")
                             .DataSource(m => m.Mvc().Controller(MenuController.Name).LoadAction(nameof(MenuController.GetData)))
                           .Columns(m =>
                           {
                               m.AddFor(m => m.Title).Caption(UI.Title);
                               m.AddFor(m => m.Name).Caption(UI.Name);
                               m.AddFor(m => m.Area).Caption(UI.Area);
                               m.AddFor(m => m.Controller).Caption(UI.Controller);
                               m.AddFor(m => m.Action).Caption(UI.Action);
                               m.AddFor(m => m.IsVisible).Caption(UI.IsVisible).CellTemplate(@<text>
                                    <%if(data.IsVisible){%>
                                        <i class="far fa-eye text-primary"></i>
                                    <%} else {%>
                                        <i class="far fa-eye-slash text-warning"></i>
                                    <%}%>
                                </text>);
                           })
                        .FilterRow(f => f.Visible(true))
                        .RemoteOperations(true)
                        .Selection(m => {
                            m.Mode(SelectionMode.Single);
                        })
                        .WordWrapEnabled(true)
                        .Pager(p =>
                        {
                            p.ShowPageSizeSelector(true);
                            p.AllowedPageSizes(new int[] { 5, 20, 50 });
                        })
                        .Paging(paging => paging.PageSize(10))
                        .Scrolling(c =>
                        {
                            c.Mode(GridScrollingMode.Standard);
                            c.ShowScrollbar(ShowScrollbarMode.Always);
                            c.ScrollByContent(true);
                        })
                        .OnSelectionChanged("dtGrid.selectionChanged")
                        .OnContentReady("dtGrid.onContentReady")
                        .WEAGrid()
                        //.OnRowPrepared("OnRowPrepared")
                        //.OnCellPrepared("OnCellPrepared")
                        .Summary(s => s
                            .TotalItems(totalItems => {
                                totalItems.AddFor(m => m.Title).SummaryType(SummaryType.Count);
                            })
                        )
                    )
@*@(Html.DevExtreme()
    .DataGrid<Menu>()
     .DataSource(m => m.Mvc().Controller(MenuController.Name).LoadAction(nameof(MenuController.GetData)))
     .ID("dtGrid")
      .WEAGrid()
     .RemoteOperations(true)
     .ShowRowLines(true)
     .ShowBorders(true)
     .FilterRow(m => {
         m.Visible(true).ApplyFilter(GridApplyFilterMode.Auto);
     })
     .WordWrapEnabled(true)
         .Columns(m => {
             m.AddFor(m => m.Title).Caption(UI.Title);
             m.AddFor(m => m.Name).Caption(UI.Name);
             m.AddFor(m => m.Area).Caption(UI.Area);
             m.AddFor(m => m.Controller).Caption(UI.Controller);
             m.AddFor(m => m.Action).Caption(UI.Action);
         })
     .Pager(p =>
     {
         p.ShowPageSizeSelector(true);
         p.AllowedPageSizes(new int[] { 5, 20, 50 });
     })
     .Paging(paging => paging.PageSize(10))
     .Scrolling(c =>
     {
         c.Mode(GridScrollingMode.Standard);
         c.ShowScrollbar(ShowScrollbarMode.Always);
         c.ScrollByContent(true);
     })
     //.OnRowPrepared("OnRowPrepared")
     //.OnCellPrepared("OnCellPrepared")
     .OnSelectionChanged("dtGrid.selectionChanged")
     .OnContentReady("dtGrid.onContentReady")
         )*@